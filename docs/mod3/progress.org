
    

* DONE [2/2] You page must include a CSS file.
  - [X] No inline styles allowed. 
  - [X] Your CSS file should be placed into a css folder under the
    solution container folder, e.g., module3-solution/css.

* TODO [0/4] follow the mockup illustrations shown below.
  You are provided 3 mockups: 
  - [ ] desktop and tablet (same)
  - [ ] mobile
  - [ ] mobile with mobile menu dropdown shown.
  - [ ] Your implementation has to be JUST 1 page. 
  In other words, you will be creating a single, responsive page.

* DONE use Twitter Bootstrap CSS Framework as much as possible.
  I suggest you start with copying the starter bootstrap files and
  folders we discussed in Lecture 25 part 2. If you've
  cloned/downloaded the code example repository, it should be in the
  examples/Lecture25 folder. Copy the contents of examples/Lecture25
  to your solution container folder (e.g., module3-solution) as a
  starting point..

* TODO instead of specifying pixel ranges
  define our desktop, tablet, and mobile views in terms of Bootstrap
  CSS class prefixes, i.e., md, sm, and xs.

* TODO Desktop mockup illustration should correspond to Bootstrap md-based classes
* TODO Tablet mockup illustration should correspond to Bootstrap sm-based classes
* TODO Mobile mockup illustration should correspond to Bootstrap xs-based classes

* TODO [2/2] Navbar: Create a navbar that scrolls away together with the page
  - [X] the navbar should become invisible and is not fixed to the top when
  you scroll the page down
  - [X] The navbar should have a company name
  (i.e., navbar-brand class) called "Food, LLC" that is aligned to the
  left side of the navbar. (See
  https://getbootstrap.com/docs/3.3/components/#navbar. Make the
  browser window narrower to see the mobile menu button appear in the
  first example shown at the provided link.)

* DONE For desktop and tablet view, the navbar should not contain anything else.
  No other buttons should be visible. (Hint: use 'visible-xs' class.)

* DONE [3/3] Navbar - Mobile View:
  - [X] Create a simple menu button (3 horizontal bars).
  - [X] When the user clicks that button, a dropdown menu should
    appear (as illustrated in Mobile Open Menu illustration below.)
  - [X] The dropdown menu should contain 3 items: Chicken, Beef, and
    Sushi.

* DONE The dropdown menu should take up the entire width of the browser window.
  Make sure the dropdown menu has a background color set that
  distinguishes it from the rest of the content. (Hint: See
  https://getbootstrap.com/docs/3.3/components/#navbar and Lecture 31
  for examples on how to accomplish this.)

* DONE [2/2] Page Heading.
  - [X] The page heading that says Our Menu should be centered within
    the browser window.
  - [X] You must use a Bootstrap class to accomplish this.
  (Hint: look for a Bootstrap class that centers text, see
  https://getbootstrap.com/docs/3.3/css/#type-alignment.)

* DONE [4/4] Create a single really tall section
  - [X] that will use the Bootstrap Grid
  - [X] take up the entire width of the browser window (minus some
    margins, of course) for all views: desktop, tablet, and mobile.
  - To make the section really tall, you can either
    - fill it out with a LOT of text
    - or simply set its height to something like 1000px.
  - [X] It needs to be tall enough to cause scrolling down to be required to
      view the bottom of the section.
  - [X] Make sure its background color is
      set to distinguish it from the rest of the content. (Hint: don't
      forget to have an element with a class='container' or
      class='container-fluid' wrapping your grid. Remember that to have
      the grid do something "always", i.e., no matter what browser
      window size, use the col-xs-... classes. In this case, since we
      want the section to take up the entire row, use col-xs-12.)

* DONE Both the tablet view and the desktop view
  of what's graded and required is the same. Here is the mockup
  illustration of the desktop & tablet version of the site (only
  required graded parts shown):
